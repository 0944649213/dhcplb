/**
 * Copyright (c) 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

package dhcplb

import (
	"testing"

	"github.com/insomniacslk/dhcp/dhcpv6"
)

//SOLICIT message wrapped in Relay-Forw
var relayForwBytesDuidUUID = []byte{
	0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xfe, 0x80, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x26, 0x8a, 0x07, 0xff, 0xfe, 0x56,
	0xdc, 0xa4, 0x00, 0x12, 0x00, 0x06, 0x24, 0x8a,
	0x07, 0x56, 0xdc, 0xa4, 0x00, 0x09, 0x00, 0x5a,
	0x06, 0x7d, 0x9b, 0xca, 0x00, 0x01, 0x00, 0x12,
	0x00, 0x04, 0xb7, 0xfd, 0x0a, 0x8c, 0x1b, 0x14,
	0x10, 0xaa, 0xeb, 0x0a, 0x5b, 0x3f, 0xe8, 0x9d,
	0x0f, 0x56, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x17,
	0x00, 0x18, 0x00, 0x17, 0x00, 0x18, 0x00, 0x01,
	0x00, 0x08, 0x00, 0x02, 0xff, 0xff, 0x00, 0x03,
	0x00, 0x28, 0x07, 0x56, 0xdc, 0xa4, 0x00, 0x00,
	0x0e, 0x10, 0x00, 0x00, 0x15, 0x18, 0x00, 0x05,
	0x00, 0x18, 0x26, 0x20, 0x01, 0x0d, 0xc0, 0x82,
	0x90, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xaf, 0xa0, 0x00, 0x00, 0x1c, 0x20, 0x00, 0x00,
	0x1d, 0x4c}

func Test_Mac(t *testing.T) {
	packet, err := dhcpv6.FromBytes(relayForwBytesDuidUUID)
	if err != nil {
		t.Fatalf("Error encoding DHCPv6 packet: %s", err)
	}
	mac, errMac := Mac(packet)
	if errMac != nil {
		t.Fatalf("Error extracting mac from peer-address relayinfo: %s", errMac)
	}
	if FormatID(mac) != "24:8a:07:56:dc:a4" {
		t.Fatalf("Expected mac %s but got %s", "24:8a:07:56:de:b0", FormatID(mac))
	}
}
